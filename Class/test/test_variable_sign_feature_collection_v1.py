# coding: utf-8

"""
    Digitraffic Road API

    [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.

    The version of the OpenAPI document: Branch: master, tag: 2024.10.28-1 #ef5bdf3 @ 2024-10-29T08:05:03+0000
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.variable_sign_feature_collection_v1 import VariableSignFeatureCollectionV1

class TestVariableSignFeatureCollectionV1(unittest.TestCase):
    """VariableSignFeatureCollectionV1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VariableSignFeatureCollectionV1:
        """Test VariableSignFeatureCollectionV1
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VariableSignFeatureCollectionV1`
        """
        model = VariableSignFeatureCollectionV1()
        if include_optional:
            return VariableSignFeatureCollectionV1(
                type = '',
                data_updated_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                features = [
                    openapi_client.models.variable_sign_feature_v1.VariableSignFeatureV1(
                        type = '', 
                        geometry = openapi_client.models.point.Point(), 
                        properties = openapi_client.models.variable_sign_properties_v1.VariableSignPropertiesV1(
                            id = '', 
                            type = 'SPEEDLIMIT', 
                            road_address = '', 
                            direction = 'INCREASING', 
                            carriageway = 'SINGLE', 
                            display_value = '', 
                            additional_information = '', 
                            effect_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            cause = '', 
                            reliability = 'NORMAL', 
                            text_rows = [
                                openapi_client.models.sign_text_row_v1.SignTextRowV1(
                                    screen = 56, 
                                    row_number = 56, 
                                    text = '', )
                                ], ), )
                    ]
            )
        else:
            return VariableSignFeatureCollectionV1(
                type = '',
                data_updated_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                features = [
                    openapi_client.models.variable_sign_feature_v1.VariableSignFeatureV1(
                        type = '', 
                        geometry = openapi_client.models.point.Point(), 
                        properties = openapi_client.models.variable_sign_properties_v1.VariableSignPropertiesV1(
                            id = '', 
                            type = 'SPEEDLIMIT', 
                            road_address = '', 
                            direction = 'INCREASING', 
                            carriageway = 'SINGLE', 
                            display_value = '', 
                            additional_information = '', 
                            effect_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            cause = '', 
                            reliability = 'NORMAL', 
                            text_rows = [
                                openapi_client.models.sign_text_row_v1.SignTextRowV1(
                                    screen = 56, 
                                    row_number = 56, 
                                    text = '', )
                                ], ), )
                    ],
        )
        """

    def testVariableSignFeatureCollectionV1(self):
        """Test VariableSignFeatureCollectionV1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
